name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Register a new user'
      description: 'Creates a new user account with the provided information.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The full name of the user.'
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user (must be unique).'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the user account.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password confirmation.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: secret123
      password_confirmation: secret123
    fileParameters: []
    responses:
      -
        status: 422
        content: |-
          {
            "success": false,
            "message": "Validation failed",
            "errors": {
              "email": ["The email has already been taken."],
              "password": ["The password confirmation does not match."]
            }
          }
        headers: []
        description: 'Validation Error'
        custom: []
    responseFields:
      success:
        name: success
        description: 'Indicates if the request was successful.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'A message describing the result of the operation.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: 'The user data including authentication token.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.id:
        name: data.id
        description: 'The unique identifier of the user.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.name:
        name: data.name
        description: 'The name of the user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.email:
        name: data.email
        description: 'The email address of the user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.token:
        name: data.token
        description: |-
          The authentication token for API access.
            }
          }
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login user'
      description: 'Authenticates a user and provides an API token.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user.'
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password for the user account.'
        required: true
        example: secret123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: secret123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": true,
            "message": "Login successful",
            "data": {
              "id": 1,
              "name": "John Doe",
              "email": "john@example.com",
              "token": "1|abcdefghijklmnopqrstuvwxyz"
            }
          }
        headers: []
        description: Success
        custom: []
      -
        status: 401
        content: |-
          {
            "success": false,
            "message": "Invalid credentials",
            "errors": {}
          }
        headers: []
        description: 'Invalid Credentials'
        custom: []
    responseFields:
      success:
        name: success
        description: 'Indicates if the request was successful.'
        required: false
        example: null
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      message:
        name: message
        description: 'A message describing the result of the operation.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data:
        name: data
        description: 'The user data including authentication token.'
        required: false
        example: null
        type: object
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.id:
        name: data.id
        description: 'The unique identifier of the user.'
        required: false
        example: null
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.name:
        name: data.name
        description: 'The name of the user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.email:
        name: data.email
        description: 'The email address of the user.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      data.token:
        name: data.token
        description: 'The authentication token for API access.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
